{"version":3,"sources":["components/navbar.jsx","services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/pagination.jsx","components/common/sidebar.jsx","components/utils/paginate.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/searchBox.jsx","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/logout.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","user","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","name","init","log","error","console","axios","interceptors","response","use","status","logger","toast","Promise","reject","get","post","put","delete","setJwt","jwt","defaults","headers","common","apiEndpoint","apiUrl","movieUrl","getMovie","movieId","http","saveMovie","movie","_id","body","deleteMovie","getGenres","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","map","page","key","onClick","Sidebar","items","textProperty","valueProperty","onItemSelect","selectedItem","item","defaultProps","paginate","pageNumber","startIndex","slice","take","value","Like","props","classes","liked","onLike","style","cursor","aria-hidden","TableHeader","raiseSort","path","sortColumn","order","onSort","renderSortIcon","column","this","columns","scope","label","Component","TableBody","renderCell","content","createKey","data","Table","email","password","a","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","title","deleteColumn","onDelete","auth","isAdmin","push","movies","SearchBox","onChange","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSearch","query","handleSort","getPageData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","count","Customers","Rentals","NotFound","Input","rest","htmlFor","Select","options","option","role","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleSubmit","preventDefault","doSubmit","handleChange","input","errorMessage","disabled","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","integer","history","populateGeneres","populateMovie","match","params","mapToViewModel","replace","onSubmit","renderInputField","renderSelectMenu","renderSubmitButton","LoginForm","username","location","window","from","pathname","register","fullname","RegisterForm","Logout","ProtectedRoute","component","render","App","Fragment","exact","Boolean","hostname","process","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b80f27cf.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\n\nconst Navbar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-5\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/movies\">\n              Movies\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/customers\">\n              Customers\n            </NavLink>\n          </li>\n          <li className=\"nav-item\">\n            <NavLink className=\"nav-link\" to=\"/rentals\">\n              Rentals\n            </NavLink>\n          </li>\n          {!user && (\n            <>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/login\">\n                  Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/register\">\n                  Register\n                </NavLink>\n              </li>\n            </>\n          )}\n          {user && (\n            <>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/profile\">\n                  {user.name}\n                </NavLink>\n              </li>\n              <li className=\"nav-item\">\n                <NavLink className=\"nav-link\" to=\"/logout\">\n                  Logout\n                </NavLink>\n              </li>\n            </>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","function init() {}\n\nfunction log(error) {\n  console.error(error);\n}\n\nexport default {\n  init,\n  log,\n};\n","import axios from \"axios\";\nimport logger from \"./logService\";\nimport { toast } from \"react-toastify\";\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    // Unexpected Errors (network down, server down, db down, bug)\n    // - Log them\n    // - Display a generic and friendly error message\n    logger.log(error);\n    toast.error(\"An unexpected error occured.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/movies\";\n\nfunction movieUrl(id) {\n  return `${apiEndpoint}/${id}`;\n}\n\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\n\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\n\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n\n  return http.post(apiEndpoint, movie);\n}\n\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\n","import http from \"./httpService\";\nimport { apiUrl } from \"../config.json\";\n\nconst apiEndpoint = apiUrl + \"/genres\";\n\nexport function getGenres() {\n  return http.get(apiEndpoint);\n}\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n\r\n  if (pagesCount === 1) return null;\r\n\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <button onClick={() => onPageChange(page)} className=\"page-link\">\r\n              {page}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst Sidebar = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  onItemSelect,\r\n  selectedItem\r\n}) => {\r\n  return (\r\n    <div className=\"list-group\">\r\n      {items.map(item => (\r\n        <button\r\n          key={item[valueProperty]}\r\n          type=\"button\"\r\n          className={\r\n            item === selectedItem\r\n              ? \"list-group-item list-group-item-action active\"\r\n              : \"list-group-item list-group-item-action\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item[textProperty]}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Use this method of passign deault props value instead\r\n// of assigning props and value from another file\r\nSidebar.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default Sidebar;\r\n","import _ from \"lodash\";\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n\n  return _(items)\n    .slice(startIndex)\n    .take(pageSize)\n    .value();\n}\n","import React from \"react\";\n\nconst Like = props => {\n  let classes = \"fa fa-heart\";\n  if (!props.liked) classes += \"-o\";\n\n  return (\n    <i\n      onClick={props.onLike}\n      className={classes}\n      style={{ cursor: \"pointer\" }}\n      aria-hidden=\"true\"\n    />\n  );\n};\n\nexport default Like;\n","import React, { Component } from \"react\";\n\nclass TableHeader extends Component {\n  raiseSort = path => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n\n  renderSortIcon = column => {\n    const { sortColumn } = this.props;\n    if (column.path !== sortColumn.path) return null;\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\n\n    return <i className=\"fa fa-sort-desc\" />;\n  };\n\n  render() {\n    return (\n      <thead>\n        <tr>\n          {this.props.columns.map(column => (\n            <th\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n              scope=\"col\"\n              className=\"clickable\"\n            >\n              {column.label} {this.renderSortIcon(column)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n\n  createKey = (item, column) => {\n    return item._id + (column.path || column.key);\n  };\n\n  render() {\n    const { data, columns } = this.props;\n\n    return (\n      <tbody>\n        {data.map(item => (\n          <tr key={item._id}>\n            {columns.map(column => (\n              <td key={this.createKey(item, column)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React from \"react\";\nimport TableHeader from \"./tableHeader\";\nimport TableBody from \"./tableBody\";\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table\">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n      <TableBody columns={columns} data={data} />\n    </table>\n  );\n};\n\nexport default Table;\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Like from \"./common/like\";\nimport Table from \"./common/table\";\nimport auth from \"../services/authService\";\n\nclass MoviesTable extends Component {\n  columns = [\n    {\n      path: \"title\",\n      label: \"Title\",\n      content: (movie) => (\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onLike={() => this.props.onLike(movie)} />\n      ),\n    },\n  ];\n\n  deleteColumn = {\n    key: \"delete\",\n    content: (movie) => (\n      <button\n        onClick={() => this.props.onDelete(movie)}\n        className=\"btn btn-danger btn-sm\"\n      >\n        Delete\n      </button>\n    ),\n  };\n\n  constructor() {\n    super();\n    const user = auth.getCurrentUser();\n    if (user && user.isAdmin) {\n      this.columns.push(this.deleteColumn);\n    }\n  }\n\n  render() {\n    const { movies, onSort, sortColumn } = this.props;\n\n    return (\n      <Table\n        data={movies}\n        onSort={onSort}\n        sortColumn={sortColumn}\n        columns={this.columns}\n      />\n    );\n  }\n}\n\nexport default MoviesTable;\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"searchform\"\r\n      id=\"searchform\"\r\n      className=\"form-control mb-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { getMovies, deleteMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\nimport Pagination from \"./common/pagination\";\nimport Sidebar from \"./common/sidebar\";\nimport { paginate } from \"./utils/paginate\";\nimport MoviesTable from \"./moviesTable\";\nimport SearchBox from \"./searchBox\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    sortColumn: { path: \"title\", order: \"asc\" },\n    searchQuery: \"\",\n    selectedGenre: null,\n  };\n\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n\n    const { data: movies } = await getMovies();\n    this.setState({ movies, genres });\n  }\n\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted.\");\n\n      this.setState({ movies: originalMovies });\n    }\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\n  };\n\n  handleSearch = (query) => {\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n\n  getPageData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n\n    let filtered = allMovies;\n    if (searchQuery) {\n      filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    } else if (selectedGenre && selectedGenre._id) {\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\n    }\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      genres,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n\n    const { user } = this.props;\n\n    if (count === 0) return <p>There are no movies in the database.</p>;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <Sidebar\n            items={genres}\n            selectedItem={selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link className=\"btn btn-primary mb-3\" to=\"/movies/new\">\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database.</p>\n          <SearchBox onChange={this.handleSearch} value={searchQuery} />\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onDelete={this.handleDelete}\n            onLike={this.handleLike}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React from \"react\";\n\nconst Customers = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Customers</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Customers;\n","import React from \"react\";\n\nconst Rentals = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Rentals</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default Rentals;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        <h1>Page Not Found</h1>\n      </div>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} className=\"form-control\" id={name} />\r\n      {error && <div className=\"alert alert-danger mt-2\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, placeholder, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} {...rest} className=\"custom-select\" id={name}>\r\n        <option value=\"\">{placeholder}</option>\r\n        {options.map((option) => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && (\r\n        <div className=\"alert alert-danger mt-2\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {},\r\n    value: \"\"\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderSubmitButton(label) {\r\n    return (\r\n      <button\r\n        type=\"submit\"\r\n        disabled={this.validate()}\r\n        className=\"btn btn-primary\"\r\n      >\r\n        {label}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  renderInputField(name, label, type = \"text\", placeholder) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Input\r\n        name={name}\r\n        type={type}\r\n        value={data[name]}\r\n        label={label}\r\n        placeholder={placeholder}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelectMenu(name, label, options, placeholder) {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select name={name} label={label} value={data[name]} options={options} onChange={this.handleChange} error={errors[name]} placeholder={placeholder} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\nimport { getGenres } from \"../services/genreService\";\n\nclass MovieForm extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    genres: [],\n    errors: {},\n  };\n\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genre\"),\n    numberInStock: Joi.number()\n      .min(0)\n      .max(100)\n      .integer()\n      .required()\n      .label(\"Number in Stock\"),\n    dailyRentalRate: Joi.number().min(0).max(10).required().label(\"Rate\"),\n  };\n\n  async componentDidMount() {\n    await this.populateGeneres();\n    await this.populateMovie();\n  }\n\n  async populateGeneres() {\n    const { data: genres } = await getGenres();\n    this.setState({ genres });\n  }\n\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n\n      const { data: movie } = await getMovie(movieId);\n      this.setState({ data: this.mapToViewModel(movie) });\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        this.props.history.replace(\"/not-found\");\n    }\n  }\n\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n\n    this.props.history.push(\"/movies\");\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Movie Form</h1>\n          <form onSubmit={this.handleSubmit}>\n            {/* Title */}\n            {this.renderInputField(\"title\", \"Title\", \"text\", \"Movie Name\")}\n            {/* Genre */}\n            {this.renderSelectMenu(\n              \"genreId\",\n              \"Genre\",\n              this.state.genres,\n              \"Select a Genre\"\n            )}\n            {/* Number in Stock */}\n            {this.renderInputField(\n              \"numberInStock\",\n              \"Number in Stock\",\n              \"number\",\n              \"Movie Quantity\"\n            )}\n            {/* Rate */}\n            {this.renderInputField(\n              \"dailyRentalRate\",\n              \"Rate\",\n              \"number\",\n              \"Daily Rental Rate\"\n            )}\n            {/* Submit Button */}\n            {this.renderSubmitButton(\"Save\")}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieForm;\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {},\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().label(\"Password\"),\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <h1>Login</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInputField(\"username\", \"Username\", \"email\")}\r\n            {this.renderInputField(\"password\", \"Password\", \"password\")}\r\n            {this.renderSubmitButton(\"Login\")}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\nimport { apiUrl } from \"../config.json\";\r\n\r\nconst apiEndpoint = apiUrl + \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndpoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.fullname,\r\n  });\r\n}\r\n","import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport { register } from \"../services/userService\";\nimport auth from \"../services/authService\";\n\nclass RegisterForm extends Form {\n  state = {\n    data: { username: \"\", password: \"\", fullname: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    username: Joi.string().email().required().label(\"Username\"),\n    password: Joi.string().min(5).required().label(\"Password\"),\n    fullname: Joi.string().required().label(\"Name\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const response = await register(this.state.data);\n      auth.loginWithJwt(\"token\", response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Register</h1>\n          <form onSubmit={this.handleSubmit}>\n            {this.renderInputField(\n              \"username\",\n              \"Username\",\n              \"email\",\n              \"email@domain.com\"\n            )}\n            {this.renderInputField(\"password\", \"Password\", \"password\")}\n            {this.renderInputField(\n              \"fullname\",\n              \"Name\",\n              \"text\",\n              \"Your Full Name\"\n            )}\n            {this.renderSubmitButton(\"Register\")}\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location },\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Navbar from \"./components/navbar\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <ProtectedRoute path=\"/movies/new\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect exact from=\"/\" to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\n//logger.init();\nconsole.log(process.env);\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}